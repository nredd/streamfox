name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Cancel in-progress runs for the same workflow and ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke-tests:
    name: Smoke Tests (Format, Lint, Type, Test)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Run smoke tests (tox parallel)
        run: |
          uv run tox run-parallel

      - name: Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  format:
    name: Code Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Check formatting
        run: |
          uv run ruff format --check .

  lint:
    name: Linting
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Lint code
        run: |
          uv run ruff check .

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Type check
        run: |
          uv run mypy src/streamfox

  test:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Run tests
        run: |
          uv run pytest tests/ -v --cov=src/streamfox --cov-report=term-missing --cov-report=xml

      - name: Upload coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Summary job that other workflows can depend on
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    if: always()
    needs: [format, lint, type-check, test]
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.format.result }}" == "success" ]] && \
             [[ "${{ needs.lint.result }}" == "success" ]] && \
             [[ "${{ needs.type-check.result }}" == "success" ]] && \
             [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "All CI checks passed!"
            exit 0
          else
            echo "One or more CI checks failed!"
            exit 1
          fi
